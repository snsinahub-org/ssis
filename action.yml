name: 'action yml'
description: 'dotnet restore'
inputs:
  project_path:  
    description: 'path'
    required: true
  project_configuration:  
    description: 'test-path'
    required: true
  output_path:  
    description: 'output_path'
    required: true  
  file_extenstion:  
    description: 'file_extenstion'
    required: false
    default: '*.sln'
  ssis_action:  
    description: 'output_path'
    required: true
outputs:
  random-number:
    description: "Random number"
    value: ${{ steps.random-number-generator.outputs.random-number }}
runs:
  using: "composite"
  steps:
    - run: |
        $Env:PATH += ";C:\Program Files (x86)\Microsoft Visual Studio\Installer"
        $VS_FILE = vswhere -products * -format json | jq '.[0]' | jq .productPath
        $TMP = Split-Path -Path $VS_FILE.replace('\\', '\')
        $VS_PATH = $TMP.replace('"', '')
        $Env:PATH += ";$VS_PATH"
        cd "${{ inputs.project_path }}"
        Get-ChildItem -Path .\ -Filter "*.sln" -File -Name| ForEach-Object {    

          $proj = "${{ inputs.project_path }}/" + $_
          echo "Path ----- >  + $proj"
          $directory=Split-Path -Path "$proj"
          cd "$directory"

          Get-ChildItem -Path "$directory" -Recurse -Depth 1 -Filter "*.dtproj" -File -Name| ForEach-Object { 
            # $directory=Split-Path -Path $proj
            echo $_
            $bin_path=Split-Path -Path "$directory\$_"
            echo $bin_path
            echo "devenv $_ /build ${{ inputs.project_configuration }} /Project $_"
            devenv "$_" /build "${{ inputs.project_configuration }}" /Project "$_"
            C:\Windows\System32\robocopy.exe "$bin_path\bin\${{ inputs.project_configuration }}" "${{ inputs.output_path }}" /s /r:10            
          }         
          
          
        }
                
      shell: powershell
      if: ${{ inputs.ssis_action == 'build' }}
